How to build
------------

To build AvsPmod, check that all the requirements are met and run 
'python -O build.py'. A ZIP or 7z archive will be created on its 
same directory.


Requirements
------------

- Python (versions 2.6-2.7 supported)
- Microsoft runtime DLLs
- wxPython (2.8-2.9 supported)
- Additional included resources (see below)
- py2exe
- cffi and its dependencies (only for x86-64)
- editbin (only for x86-32, optional)
- UPX (only for x86-32, optional)
- 7-Zip (optional)


Windows x86-64
--------------

Some extra dependencies are needed for building a 64-bit package:
- cffi module
- pycparser module (cffi dependency)
- Visual C++ (needed for building the C extension generated by cffi), options:
  1 - Visual Studio
  2 - Microsoft Visual C++ Compiler for Python 2.7
      <https://www.microsoft.com/en-us/download/details.aspx?id=44266>
    - setuptools module, v6.0+
- avisynth_c.h (take the modified 2.5 header used by x264)


Microsoft runtime DLLs
----------------------

Some Microsoft Visual C runtime DLLs are needed: 'msvcm90.dll', 'msvcp90.dll' 
and 'msvcr90.dll'.  Chances are that these files are already present in your 
system.  In that case the build script will pick them up automatically.

If they don't, install the Microsoft Visual C++ 2008 Redistributable Package:
- 32-bit: <https://www.microsoft.com/en-us/download/details.aspx?id=29>
- 64-bit: <https://www.microsoft.com/en-us/download/details.aspx?id=15336>
or take them from Python, Visual Studio 2008 or another application and 
place them in the same directory as the AvsPmod source files. The exact 
version needed is 9.0.21022.8.


Additional included resources
-----------------------------
avs2avi <http://moitah.net/> is needed for the 'Script encoder (VfW)' tool.  
These two files are expected to be found in the 'tools' subdirectory:
- avs2avi.exe
- avs2avi_src.zip


editbin
-------

The editbin.exe application can be used optionally to mark the 32-bit 
executable produced by py2exe with the large address aware flag.  This 
way AvsPmod can use up to 4 GB in a 64-bit environment instead of the 
2 GB default. Editbin is installed together with Visual Studio.  The 
build script will attempt to locate it automatically.


UPX, 7-Zip
----------

UPX can be used to compress the executable files.  If 7-Zip is present, a 7z 
archive is created instead of ZIP.  The build script searchs for them in the 
'Program Files' folder. You can also just put upx.exe and/or 7z.exe in the 
same directory as the source code files.


Other
-----

Rename/copy readme.txt to README.md if not present.
